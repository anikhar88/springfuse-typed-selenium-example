/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/support/ExcelExportSupport.p.vm.java
 */
package fr.vendredi.web.domain.support;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import javax.inject.Inject;
import javax.inject.Named;

import fr.vendredi.dao.support.EntitySelector;
import fr.vendredi.dao.support.PropertySelector;
import fr.vendredi.dao.support.Range;
import fr.vendredi.dao.support.SearchParameters;
import fr.vendredi.domain.Identifiable;
import fr.vendredi.printer.TypeAwarePrinter;

@Named
public class ExcelExportSupport {
    @Inject
    private transient TypeAwarePrinter typeAwarePrinter;

    private String objectsToString(Iterable<?> objects) {
        if (objects == null) {
            return "";
        }
        boolean first = true;
        StringBuilder ret = new StringBuilder();
        for (Object object : objects) {
            if (first) {
                first = false;
            } else {
                ret.append(", ");
            }
            ret.append(objectToString(object));
        }
        return ret.toString();
    }

    private String objectToString(Object object) {
        if (object == null) {
            return "";
        } else if (object instanceof Identifiable) {
            return typeAwarePrinter.print(object);
        } else if (object instanceof Date) {
            return dateToString((Date) object);
        }
        return object.toString();
    }

    public void convertSearchParametersToMap(Map<String, Object> model, SearchParameters searchParameters) {
        for (EntitySelector<?, ? extends Identifiable<?>, ?> entitySelector : searchParameters.getEntities()) {
            model.put(entitySelector.getField().getName(), objectsToString(entitySelector.getSelected()));
        }
        for (Range<?, ?> range : searchParameters.getRanges()) {
            model.put(range.getField().getName() + "From", objectToString(range.getFrom()));
            model.put(range.getField().getName() + "To", objectToString(range.getTo()));
        }
        for (PropertySelector<?, ?> propertySelector : searchParameters.getProperties()) {
            model.put(propertySelector.getField().getName(), objectsToString(propertySelector.getSelected()));
        }
    }

    public String dateToString(Date date) {
        return new SimpleDateFormat("MM/dd/yyyy HH:mm:ss").format(date);
    }

}
