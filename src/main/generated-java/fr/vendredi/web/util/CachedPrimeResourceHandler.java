/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/util/CachedPrimeResourceHandler.p.vm.java
 */
package fr.vendredi.web.util;

import static com.google.common.collect.Maps.newHashMap;

import java.util.Map;

import javax.faces.application.Resource;
import javax.faces.application.ResourceHandler;

import org.primefaces.application.PrimeResourceHandler;

/**
 * Cache primefaces resources
 */
public class CachedPrimeResourceHandler extends PrimeResourceHandler {

    private Map<String, Resource> resCache = newHashMap();

    public CachedPrimeResourceHandler(ResourceHandler wrapped) {
        super(wrapped);
    }

    @Override
    public Resource createResource(String resourceName) {
        return createResource(resourceName, "");
    }

    @Override
    public Resource createResource(String resourceName, String libraryName) {
        return createResource(resourceName, libraryName, "");
    }

    @Override
    public Resource createResource(String resourceName, String libraryName, String contentType) {
        String key = resourceName + "__" + libraryName + "__" + contentType;
        if (resCache.containsKey(key)) {
            return resCache.get(key);
        }
        Resource resource = super.createResource(resourceName, libraryName, contentType);
        resCache.put(key, resource);
        return resource;
    }
}