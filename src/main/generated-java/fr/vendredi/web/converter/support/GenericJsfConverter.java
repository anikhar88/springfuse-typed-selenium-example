/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/converter/support/GenericJsfConverter.p.vm.java
 */
package fr.vendredi.web.converter.support;

import java.io.Serializable;

import javax.faces.component.UIComponent;
import javax.faces.component.UIInput;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.ConverterException;

import org.springframework.core.convert.support.DefaultConversionService;

import fr.vendredi.domain.Identifiable;
import fr.vendredi.repository.support.GenericRepository;

/**
 * Base JSF converter for JPA entities. Handle cases when primary key is not yet set or when it is set manually.
 */
public class GenericJsfConverter<E extends Identifiable<PK>, PK extends Serializable> implements Converter {
    public static final String NULL_OBJECT_AS_STRING = "__null__";
    public static final String NEW_OBJECT_AS_STRING = "__new__";

    private Class<E> type;
    private Class<PK> pkType;

    protected DefaultConversionService conversionService = new DefaultConversionService();
    protected GenericRepository<E, PK> entityService;

    protected GenericJsfConverter(GenericRepository<E, PK> entityService, Class<E> type, Class<PK> pkType) {
        this.entityService = entityService;
        this.type = type;
        this.pkType = pkType;
    }

    public Class<E> getType() {
        return type;
    }

    @Override
    public Object getAsObject(FacesContext context, UIComponent component, String value) throws ConverterException {
        if (value == null || NULL_OBJECT_AS_STRING.equals(value)) {
            return null;
        } else if (component instanceof UIInput && NEW_OBJECT_AS_STRING.equals(value)) {
            return ((UIInput) component).getValue();
        }

        E entity = entityService.getById(toPk(value));
        if (entity == null && component instanceof UIInput) {
            // id is manually set and entity is not yet persisted
            return ((UIInput) component).getValue();
        }

        return entity;
    }

    /**
     * Converts the passed value to a PK instance. Entity having a composite PK must override it.
     */
    public PK toPk(String value) {
        return conversionService.convert(value, pkType);
    }

    @Override
    @SuppressWarnings("unchecked")
    public String getAsString(FacesContext context, UIComponent component, Object object) {
        if (object == null || !Identifiable.class.isAssignableFrom(object.getClass())) {
            return NULL_OBJECT_AS_STRING;
        }

        Identifiable<PK> io = (Identifiable<PK>) object;
        if (io.isIdSet()) {
            return io.getId().toString();
        } else if (component instanceof UIInput) {
            return NEW_OBJECT_AS_STRING;
        } else {
            return NULL_OBJECT_AS_STRING;
        }
    }
}