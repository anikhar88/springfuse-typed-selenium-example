<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ! (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to purchase Celerio ? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Template pack-jsf2-spring-conversation:src/main/webapp/domain/edit.e.vm.xhtml
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:app="http://springfuse.jaxio.com/app"
	xmlns:appcc="http://java.sun.com/jsf/composite/components">
<app:edit bean="#{accountEditForm}" title="#{accountEditForm.title}">
	<ui:define name="form">
		<app:input id="username" value="#{accountEditForm.account.username}" size="100" label="account_username" required="true">
			<f:validateBean binding="#{jpaUniqueValidator}" entity="#{accountEditForm.account}" property="username" />
		</app:input>
		<app:inputPassword id="password" value="#{accountEditForm.account.password}" size="100" label="account_password" required="true" />
		<app:input id="email" value="#{accountEditForm.account.email}" size="100" label="account_email" required="true">
			<f:validateBean binding="#{jpaUniqueValidator}" entity="#{accountEditForm.account}" property="email" />
		</app:input>
		<app:inputBoolean id="isEnabled" value="#{accountEditForm.account.isEnabled}" label="account_isEnabled" required="true" />
		<app:selectOneRadio id="civility" value="#{accountEditForm.account.civility}" values="#{civilityItems.list}" label="account_civility" />
		<app:input id="firstName" value="#{accountEditForm.account.firstName}" size="100" label="account_firstName" />
		<app:input id="lastName" value="#{accountEditForm.account.lastName}" size="100" label="account_lastName" />
		<app:inputDateTime id="birthDate" value="#{accountEditForm.account.birthDate}" label="account_birthDate" />
		<app:inputTextArea id="description" value="#{accountEditForm.account.description}" label="account_description" />
		<app:autoComplete id="homeAddress" value="#{accountEditForm.homeAddress.selected}" label="account_homeAddress" title="account_homeAddress" required="false" 
			 controller="#{addressController}" model="#{accountEditForm.homeAddress}" permission="#{addressPermission}" completeMethod="completeFullText" converter="#{addressJsfConverter}">
			<app:iconSearch id="selectHomeAddress" />
			<app:iconAdd id="addHomeAddress" />
			<app:iconEdit item="#{accountEditForm.account.homeAddress}" />
			<app:iconView item="#{accountEditForm.account.homeAddress}" />
		</app:autoComplete>
		<app:audit
			creationAuthor="#{accountEditForm.account.creationAuthor}"
			creationDate="#{accountEditForm.account.creationDate}"
			lastModificationAuthor="#{accountEditForm.account.lastModificationAuthor}"
			lastModificationDate="#{accountEditForm.account.lastModificationDate}"
		/>
	</ui:define>
	<ui:define name="tabs">
			<p:tab id="coolBooks" title="#{msg.account_coolBooks}" rendered="#{bookPermission.canUse() and not (print and accountEditForm.account.coolBooks.isEmpty())}">
				<!-- coolBooks -->
				<p:dataTable id="coolBooksList" var="item" value="#{accountEditForm.coolBooks.model}"
					paginator="#{not print and accountEditForm.account.coolBooks.size() gt 10}" rows="#{print ? null : 10}"
					rowsPerPageTemplate="10,25,50,100" paginatorPosition="bottom"
					selection="#{accountEditForm.coolBooks.model.selectedRow}" selectionMode="single" emptyMessage="#{msg.collection_empty}">
					<p:ajax event="rowSelect" listener="#{accountEditForm.coolBooks.onRowSelectEdit}" disabled="#{readonly}" />
					<p:ajax event="rowSelect" listener="#{accountEditForm.coolBooks.onRowSelectView}" disabled="#{!readonly}"/>
					<p:column id="book_bookTitle" headerText="#{msg.book_bookTitle}">
						<h:outputText value="#{item.bookTitle}" />
					</p:column>
					<p:column id="book_numberOfPages" headerText="#{msg.book_numberOfPages}" styleClass="numeric">
						<h:outputText value="#{item.numberOfPages}" />
					</p:column>
					<p:column id="actions" styleClass="actions-column" resizable="false">
						<f:facet name="header">
							<app:iconAdd id="addBook" model="#{accountEditForm.coolBooks}" title="account_coolBooks" permission="#{bookPermission}"/>
						</f:facet>
						<app:iconView model="#{accountEditForm.coolBooks}" item="#{item}" permission="#{bookPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.coolBooks.model.selectedRow}" />
						</app:iconView>
						<app:iconEdit model="#{accountEditForm.coolBooks}" item="#{item}" permission="#{bookPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.coolBooks.model.selectedRow}" />
						</app:iconEdit>
						<app:iconRemove dialogWidgetVar="askForRemoveBookDialog" item="#{item}" permission="#{bookPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.coolBooks.model.selectedRow}" />
						</app:iconRemove>
					</p:column>
				</p:dataTable>
			</p:tab>
			<p:tab id="edocs" title="#{msg.account_edocs}" rendered="#{documentPermission.canUse() and not (print and accountEditForm.account.edocs.isEmpty())}">
				<!-- edocs -->
				<p:dataTable id="edocsList" var="item" value="#{accountEditForm.edocs.model}"
					paginator="#{not print and accountEditForm.account.edocs.size() gt 10}" rows="#{print ? null : 10}"
					rowsPerPageTemplate="10,25,50,100" paginatorPosition="bottom"
					selection="#{accountEditForm.edocs.model.selectedRow}" selectionMode="single" emptyMessage="#{msg.collection_empty}">
					<p:ajax event="rowSelect" listener="#{accountEditForm.edocs.onRowSelectEdit}" disabled="#{readonly}" />
					<p:ajax event="rowSelect" listener="#{accountEditForm.edocs.onRowSelectView}" disabled="#{!readonly}"/>
					<p:column id="document_documentBinary" headerText="#{msg.document_documentBinary}">
						<app:outputFile filename="#{item.documentFileName}" stream="#{documentFileDownload.getDocumentBinaryStream(item)}" />	
					</p:column>
					<p:column id="actions" styleClass="actions-column" resizable="false">
						<f:facet name="header">
							<app:iconAdd id="addEdoc" model="#{accountEditForm.edocs}" title="account_edocs" permission="#{documentPermission}"/>
						</f:facet>
						<app:iconView model="#{accountEditForm.edocs}" item="#{item}" permission="#{documentPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.edocs.model.selectedRow}" />
						</app:iconView>
						<app:iconEdit model="#{accountEditForm.edocs}" item="#{item}" permission="#{documentPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.edocs.model.selectedRow}" />
						</app:iconEdit>
						<app:iconRemove dialogWidgetVar="askForRemoveEdocDialog" item="#{item}" permission="#{documentPermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.edocs.model.selectedRow}" />
						</app:iconRemove>
					</p:column>
				</p:dataTable>
			</p:tab>
			<p:tab id="securityRoles" title="#{msg.account_securityRoles}" rendered="#{rolePermission.canUse() and not (print and accountEditForm.account.securityRoles.isEmpty())}">
				<!-- securityRoles -->
				<p:dataTable id="securityRolesList" var="item" value="#{accountEditForm.securityRoles.model}"
					paginator="#{not print and accountEditForm.account.securityRoles.size() gt 10}" rows="#{print ? null : 10}"
					rowsPerPageTemplate="10,25,50,100" paginatorPosition="bottom"
					selection="#{accountEditForm.securityRoles.model.selectedRow}" selectionMode="single" emptyMessage="#{msg.collection_empty}">
					<p:ajax event="rowSelect" listener="#{accountEditForm.securityRoles.onRowSelectEdit}" disabled="#{readonly}" />
					<p:ajax event="rowSelect" listener="#{accountEditForm.securityRoles.onRowSelectView}" disabled="#{!readonly}"/>
					<p:column id="role_roleName" headerText="#{msg.role_roleName}">
						<h:outputText value="#{item.roleName}" />
					</p:column>
					<p:column id="actions" styleClass="actions-column" resizable="false">
						<f:facet name="header">
							<app:iconSearch id="selectSecurityRole" model="#{accountEditForm.securityRoles}" title="account_securityRoles" permission="#{rolePermission}" />
							<app:iconAdd id="addSecurityRole" model="#{accountEditForm.securityRoles}" title="account_securityRoles" permission="#{rolePermission}"/>
						</f:facet>
						<app:iconView model="#{accountEditForm.securityRoles}" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.securityRoles.model.selectedRow}" />
						</app:iconView>
						<app:iconEdit model="#{accountEditForm.securityRoles}" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.securityRoles.model.selectedRow}" />
						</app:iconEdit>
						<app:iconRemove dialogWidgetVar="askForRemoveSecurityRoleDialog" item="#{item}" permission="#{rolePermission}">
							<f:setPropertyActionListener value="#{item}" target="#{accountEditForm.securityRoles.model.selectedRow}" />
						</app:iconRemove>
					</p:column>
				</p:dataTable>
			</p:tab>
	</ui:define>
	<ui:define name="custom-dialogs">
		<app:confirmToManyRemoveDialog widgetVar="askForRemoveBookDialog" toManyAction="#{accountEditForm.coolBooks}" update=":form:tabs:coolBooksList :form:messages" />
		<app:confirmToManyRemoveDialog widgetVar="askForRemoveEdocDialog" toManyAction="#{accountEditForm.edocs}" update=":form:tabs:edocsList :form:messages" />
		<app:confirmToManyRemoveDialog widgetVar="askForRemoveSecurityRoleDialog" toManyAction="#{accountEditForm.securityRoles}" update=":form:tabs:securityRolesList :form:messages" />
	</ui:define>
</app:edit>
</ui:composition>
