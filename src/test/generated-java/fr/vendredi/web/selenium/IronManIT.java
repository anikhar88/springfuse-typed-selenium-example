/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-selenium-primefaces:src/test/java/selenium/SearchFormsIT.p.vm.java
 */
package fr.vendredi.web.selenium;

import static org.fest.assertions.Assertions.assertThat;

import org.junit.Test;

import fr.vendredi.web.selenium.page.account.AccountEdit;
import fr.vendredi.web.selenium.page.account.AccountSearch;
import fr.vendredi.web.selenium.page.role.RoleSearch;
import fr.vendredi.web.selenium.support.SeleniumTest;

public class IronManIT extends SeleniumTest {
	AccountSearch accountSearch;
	AccountEdit accountEdit;
	RoleSearch roleSearch;

	@Test
	public void ironMan() throws InterruptedException {
		englishHomePage();
		loginAsAnAdmin();
		loggedHomePage.accounts();
		webClient.message("Searching for stuff");
		accountSearch.form.username.complete("dem", "demo");
		accountSearch.form.username.type("admin");
		accountSearch.form.isEnabled.choose(true);
		accountSearch.form.search();
		assertThat(accountSearch.table.column("username")).hasSize(2).containsExactly("admin", "demo");
		accountSearch.table.hasSize(2);
		assertThat(accountSearch.table.columnAt("username", 1)).isEqualTo("admin");
		assertThat(accountSearch.table.columnAt("username", 2)).isEqualTo("demo");
		webClient.message("Sorting by name");
		accountSearch.orders.username.up();
		accountSearch.table.hasSize(2);
		assertThat(accountSearch.table.columnAt("username", 1)).isEqualTo("admin");
		assertThat(accountSearch.table.columnAt("username", 2)).isEqualTo("demo");
		accountSearch.orders.username.down();
		accountSearch.table.hasSize(2);
		assertThat(accountSearch.table.columnAt("username", 1)).isEqualTo("demo");
		assertThat(accountSearch.table.columnAt("username", 2)).isEqualTo("admin");
		webClient.message("Click 2nd test");
		accountSearch.table.editLine(2);
		accountEdit.form.username.type("iron man");
		accountEdit.form.homeAddress.complete("tokio", "Tokyo");
		accountEdit.tabs.securityRoles.open();
		assertThat(accountEdit.tabs.securityRoles.column("roleName")).hasSize(3).contains("ROLE_ADMIN");
		assertThat(accountEdit.tabs.securityRoles.columnAt("roleName", 2)).isEqualTo("ROLE_USER");
		accountEdit.tabs.securityRoles.remove("ROLE_ADMIN");
		accountEdit.tabs.securityRoles.confirmRemove();
		assertThat(accountEdit.tabs.securityRoles.column("roleName")).hasSize(2).containsExactly("ROLE_USER", "ROLE_MONITORING");
		accountEdit.tabs.securityRoles.remove("ROLE_MONITORING");
		accountEdit.tabs.securityRoles.confirmRemove();
		accountEdit.tabs.securityRoles.remove("ROLE_USER");
		accountEdit.tabs.securityRoles.confirmRemove();
		accountEdit.tabs.securityRoles.search();
		roleSearch.table.selectAll();
		roleSearch.table.confirmSelection();
	}
}
