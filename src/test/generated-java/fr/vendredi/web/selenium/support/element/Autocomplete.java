/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-selenium-primefaces:src/test/java/selenium/support/Autocomplete.p.vm.java
 */
package fr.vendredi.web.selenium.support.element;

import static com.google.common.collect.Lists.newArrayList;
import static com.palominolabs.xpath.XPathUtils.getXPathString;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;

import com.palominolabs.xpath.XPathUtils;

public class Autocomplete extends CustomElement {
	private final String id;
	private final By byInput;

	public Autocomplete(String id) {
		this.id = id;
		this.byInput = By.id(id + "_input");
	}

	public List<String> autocompleteValues(String match) {
		webClient.fill(webClient.find(byInput), match);
		List<String> ret = newArrayList();
		for (WebElement webElement : webClient.findAll(By.xpath("//div[@id=" + XPathUtils.getXPathString(id + "_panel") + "]/*/li"))) {
			ret.add(webElement.getText());
		}
		for (int i = 0; i < match.length(); i++) {
			webClient.find(byInput).sendKeys(Keys.BACK_SPACE);
		}
		return ret;
	}

	public void autocomplete(String text) {
		autocomplete(text, text);
	}

	public void autocomplete(String text, String match) {
		webClient.isDisplayed(byInput);
		WebElement find = webClient.find(byInput);
		find.clear();
		find.sendKeys(text);

		String xpath = "//li[@data-item-label=" + XPathUtils.getXPathString(match) + "]";
		webClient.click(By.xpath(xpath));
	}

	public void delete(String value) {
		if (!values().contains(value)) {
			return;
		}
		String xpath = "//div[@id= " + getXPathString(id) + "]//span[@class='ui-autocomplete-token-label' and text()=" + getXPathString(value)
				+ "]/../span[@class='ui-autocomplete-token-icon ui-icon ui-icon-close']";
		System.out.println(xpath);
		webClient.click(By.xpath(xpath));

		String xpathLi = "//div[@id= " + getXPathString(id) + "]//span[@class='ui-autocomplete-token-label' and text()=" + getXPathString(value) + "]";
		webClient.isRemoved(By.xpath(xpathLi));
		try {
			TimeUnit.MILLISECONDS.sleep(500);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public List<String> values() {
		List<String> ret = newArrayList();
		// we test for the number of values, because if there is no values, selenium will wait for the timeout to occur
		if (getNbValues() >= 1) {
			String spanValues = "//div[@id= " + getXPathString(id) + "]//span[@class='ui-autocomplete-token-label']";
			for (WebElement webElement : webClient.findAll(By.xpath(spanValues))) {
				ret.add(webElement.getText());
			}
		}
		return ret;
	}

	private int getNbValues() {
		String ulChildren = "//div[@id= " + getXPathString(id) + "]/ul/*";
		int count = webClient.findAll(By.xpath(ulChildren)).size();
		// -1 so we do not count the input text in which we enter our input
		return count - 1;
	}

	public void reset() {
		for (String value : values()) {
			System.out.println("Deleting " + value + " from reset");
			delete(value);
		}
	}
}
