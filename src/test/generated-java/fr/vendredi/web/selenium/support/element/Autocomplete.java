/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-selenium-primefaces:src/test/java/selenium/support/Autocomplete.p.vm.java
 */
package fr.vendredi.web.selenium.support.element;

import static com.google.common.collect.Lists.newArrayList;
import static com.palominolabs.xpath.XPathUtils.getXPathString;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import com.palominolabs.xpath.XPathUtils;

public class Autocomplete extends CustomElement {
	private final String id;
	private final By byInput;

	public Autocomplete(String id) {
		this.id = id;
		this.byInput = By.id(id + "_input");
	}

	public List<String> autocompleteValues(String match) {
		webClient.fill(byInput, match);
		waitForCompletionPanel();
		List<String> ret = newArrayList();
		System.out.println("getting values " + new Date());
		for (WebElement webElement : webClient.findAll(By.xpath("//div[@id=" + XPathUtils.getXPathString(id + "_panel") + "]/*/li"))) {
			ret.add(webElement.getText());
		}
		System.out.println("getting values done " + new Date());
		webClient.find(byInput).clear();
		return ret;
	}

	public void autocomplete(String text) {
		autocomplete(text, text);
	}

	public void autocomplete(String text, String match) {
		webClient.fill(byInput, text);
		waitForCompletionPanel();
		String matchedLi = "//div[@id=" + getXPathString(id + "_panel") + "]/ul/li[@data-item-label=" + XPathUtils.getXPathString(match) + "]";
		webClient.click(By.xpath(matchedLi));
	}

	private void waitForCompletionPanel() {
		webClient.waitUntilDisplayed(By.xpath("//div[@id=" + getXPathString(id + "_panel") + "]"));
		webClient.waitUntilDisplayed(By.xpath("//div[@id=" + getXPathString(id + "_panel") + "]/ul"));
	}

	public void delete(String value) {
		if (!values().contains(value)) {
			return;
		}
		String xpath = "//div[@id=" + getXPathString(id) + "]//span[@class='ui-autocomplete-token-label' and text()=" + getXPathString(value)
				+ "]/../span[@class='ui-autocomplete-token-icon ui-icon ui-icon-close']";
		By xpath2 = By.xpath(xpath);
		for (WebElement webElement : webClient.findAll(xpath2)) {
			webElement.click();
		}

		String stillInContainer = "//div[@id=" + getXPathString(id)
				+ "]/ul[contains(@class,'ui-autocomplete-multiple-container')]/li/span[@class='ui-autocomplete-token-label' and text()="
				+ getXPathString(value) + "]";
		// / String xpathLi = " //div[@id=" + getXPathString(id) + "]//span[@class='ui-autocomplete-token-label' and text()=" + getXPathString(value) + "]";
		System.out.println("La " + new Date());
		webClient.waitUntilRemoved(By.xpath(stillInContainer));
		System.out.println("et la " + new Date());
	}

	public List<String> values() {
		List<String> ret = newArrayList();
		String spanValues = "//div[@id=" + getXPathString(id)
				+ "]/ul[contains(@class,'ui-autocomplete-multiple-container')]/li/span[@class='ui-autocomplete-token-label']";
		for (WebElement webElement : webClient.findAllNow(By.xpath(spanValues))) {
			ret.add(webElement.getText());
		}
		System.out.println("values are " + Arrays.toString(ret.toArray()));
		return ret;
	}

	public void reset() {
		for (String value : values()) {
			delete(value);
		}
	}
}
